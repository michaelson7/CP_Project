@page
@model CP_Project.Pages.IndexModel
@{
    Layout = null;
    ViewData["Title"] = "Home page";
}

<div>
    <h4 class="mt-4"> Management Portal</h4>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Dashboard</li>
    </ol>

    <!-- colored cards stats -->
    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <!-- fetch user# -->
                    <h4>Transactions</h4>
                    <span class="font-weight-bold" id="transNum">100<br>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">
                    <h4>Subscribers</h4>
                    <span class="font-weight-bold" id="farnNums">100<br>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">
                    <h4>Services</h4>
                    <span class="font-weight-bold" id="deviceNum">353<br>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <h4>Bookings</h4>
                    <span id="revenuNum"><b>845</b><br>
                </div>
            </div>
        </div>
    </div>

    <!-- charts -->
    <div class="row">
        <!-- sold products -->
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-area mr-1"></i>
                    Transactions per Month <i class="small">(ZMK)</i>
                </div>
                <div class="card-body"><canvas id="monthRecords" width="100%" height="40"></canvas></div>
            </div>
        </div>

        <!-- best selling products -->
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-chart-bar mr-1"></i>
                    Transactions for past Week <i class="small">(ZMK)</i>
                </div>
                <div class="card-body"><canvas id="weekRecords" width="100%" height="40"></canvas></div>
            </div>
        </div>
    </div>

    <!-- database table -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Current Merchants
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Driver Code</th>
                            <th>Name</th>
                            <th>Date Registered</th>
                            <th>Email</th>
                            <th>Phone Number</th>
                        </tr>
                    </thead>
                    <tbody id="tableData">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(async function () {
        //await generateCharts();
        //await getDevicesData();
        //await getStats();
        await simulateAsycCall();
        displayMainBody();
    });

    async function getStats() {
        await makeGetRequest(baseUrl + `getDashboardStats`).then(response => {
            if (response != null) {
                var dataList = response.results;
                $('#transNum').html(dataList.transactionsCount);
                $('#farnNums').html(dataList.farmerCount);
                $('#deviceNum').html(dataList.activeDevices);
                $('#revenuNum').html(converToMoneyFormat(dataList.revenue));
            }
        });
    }

    async function generateCharts() {
        await makeGetRequest(baseUrl + `getTransactionStatsByYear`).then(response => {
            if (response != null) {
                var data = [];
                var label = [];
                for (i in response.results) {
                    var colors = getRandomColor();
                    var dataList = response.results[i];

                    data.push(dataList.total);
                    label.push(getMonth(dataList.month));

                    var ctx = document.getElementById('monthRecords').getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: label,
                            datasets: [{
                                label: `${dataList.year} Transactions`,
                                data: data,
                                borderColor: colors,

                            }]
                        }
                    });
                }
            }
        });

        await makeGetRequest(baseUrl + `getTransactionStatsByWeek`).then(response => {
            if (response != null) {
                var data = [];
                var label = [];
                for (i in response.results) {
                    var colors = getRandomColor();
                    var dataList = response.results[i];

                    data.push(dataList.total);
                    label.push(getDay(dataList.week));

                    var ctx = document.getElementById('weekRecords').getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: label,
                            datasets: [{
                                label: `${getMonth(dataList.month)} Transactions`,
                                data: data,
                                borderColor: colors,
                            }]
                        }
                    });
                }
            }
        });

        await makeGetRequest(baseUrl + `getTransactionStatsBySatelietSales`).then(response => {
            if (response != null) {
                var data = [];
                var label = [];
                for (i in response.results) {
                    var colors = generateColor();
                    var dataList = response.results[i];

                    data.push(dataList.total);
                    label.push(dataList.name);

                    var ctx = document.getElementById('stationRecords').getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: label,
                            datasets: [{
                                label: `Satelite Transactions`,
                                data: data,
                                borderColor: colors,
                                backgroundColor: colors
                            }]
                        }
                    });
                }
            }
        });

        await makeGetRequest(baseUrl + `getTransactionStatsByCropsSold`).then(response => {
            if (response != null) {
                var data = [];
                var label = [];
                for (i in response.results) {
                    var colors = generateColor();
                    var dataList = response.results[i];

                    data.push(dataList.total);
                    label.push(dataList.title);

                    var ctx = document.getElementById('cropRecords').getContext('2d');
                    var myChart = new Chart(ctx, {
                        type: 'pie',
                        data: {
                            labels: label,
                            datasets: [{
                                label: `Satelite Transactions`,
                                data: data,
                                borderColor: colors,
                                backgroundColor: colors
                            }]
                        }
                    });
                }
            }
        });
    }

    async function getDevicesData() {
        await makeGetRequest(baseUrl + `getAllDevices`).then(response => {
            if (response != null) {
                for (i in response.results) {
                    var dataList = response.results[i];
                    var bearerEmail;
                    var deviceStatus;
                    var location;

                    if (dataList.deviceBearerData != null) {
                        bearerEmail = dataList.deviceBearerData.email;
                    } else {
                        bearerEmail = `<p class="text-danger">UNSET</p>`;
                    }

                    if (dataList.deviceStatusData != null) {
                        var statusColor = getStatusColor(dataList.deviceStatusData.title);
                        deviceStatus = `<p class="${statusColor}">${dataList.deviceStatusData.title}</p>`
                    } else {
                        deviceStatus = `<p class="text-danger">UNSET</p>`
                    }

                    if (dataList.netPurLocationModel != null) {
                        location = `
                         <label class="small">Code: <b>${dataList.location}</b></label>
                         <label class="small">location: <b>${dataList.netPurLocationModel.name}</b></label>`
                    } else {
                        location = `<p class="text-danger">UNSET</p>`
                    }

                    $('#dataTable').DataTable({
                        "order": [[6, "desc"]],
                        "bDestroy": true
                    }).row.add([
                        dataList.id,
                        dataList.deviceId,
                        dataList.title,
                        dataList.serialNumber,
                        bearerEmail,
                        location,
                        convertTimeStampToDate(dataList.dateCreated),
                        deviceStatus,
                    ]).draw();
                }
            }
        });
    }

    function getMonth(num) {
        var month;
        switch (num) {
            case 1:
                month = "January"
                break;
            case 2:
                month = "February"
                break;
            case 3:
                month = "March"
                break;
            case 4:
                month = "April"
                break;
            case 5:
                month = "May"
                break;
            case 6:
                month = "June"
                break;
            case 7:
                month = "July"
                break;
            case 8:
                month = "August"
                break;
            case 9:
                month = "September"
                break;
            case 10:
                month = "October"
                break;
            case 11:
                month = "November"
                break;
            case 12:
                month = "December"
                break;
        }
        return month;
    }
    function getDay(num) {
        var month;
        console.log(num);
        switch (num) {
            case "1":
                month = "Sun"
                break;
            case "2":
                month = "Mon"
                break;
            case "3":
                month = "Tue"
                break;
            case "4":
                month = "Wed"
                break;
            case "5":
                month = "Thur"
                break;
            case "6":
                month = "Fri"
                break;
            case "7":
                month = "Sat"
        }
        return month;
    }
</script>